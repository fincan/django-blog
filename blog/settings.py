"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
#secretkey düzenlemesi
import dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# Add .env variables anywhere before SECRET_KEY
dotenv_file = os.path.join(BASE_DIR, ".env")
if os.path.isfile(dotenv_file):
    dotenv.load_dotenv(dotenv_file)

# Update secret key
SECRET_KEY = os.environ['SECRET_KEY'] # Instead of your actual secret key


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["fincan.pythonanywhere.com"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    #static files girdisinin varlığı kontrol edildi.
    'django.contrib.staticfiles',
    #ilk oluşturduğumuz app; kayıt işlemini tamamladıktan sonra buraya ekliyoruz
    'article',
    #user uygulaması model içermemesine rağmen ileride içerisinde model oluşturma ihtimaline karşı yüklenen uygulamalar içerisine eklendi.
    'user',
    #cripy formları 3. parti olarak indirildi ve eklendi
    'crispy_forms',
    #226. derste makale sayfasına ckeditor eklendi
    "ckeditor",
    #İleride silinen blog yazılarının bağlantı olduğu medya dosyalarını otamtik temizlemek için
    "django_cleanup",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #file upload işleminde MEDIA_URL erişimi
                "django.template.context_processors.media",
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

#LANGUAGE_CODE = 'en-us' # varsayılan
LANGUAGE_CODE = 'tr'

#TIME_ZONE = 'UTC' #varsayılan
TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
#kökdizinde static klasörünü Django'ya söyleyen liste
STATICFILES_DIRS = [
    BASE_DIR / "static",
    # 205. derte şimdilik lazım olmadığı için yoruma alındı
    # 205. derste yoruma alındı '/var/www/static/',
]

#225. derste Django ve diğer bileşenlerin kendi static dosyalarını da sisteme yerleşik olarak dahil etmek için eklendi. Yeni bileşenler eklendiğinde cmd de "python manage.py collectstatic" çalıştır!
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

#Bootstrap / Crispy Forms Template
CRISPY_TEMPLATE_PACK = "bootstrap4"

#ckeditor ayar alanı
CKEDITOR_CONFIGS = {
    'default': {
        "removePlugins": "stylesheetparser",
        "allowedContent": True,
        "width": "100%",
    },
}

#Media dosya klasörleri ayar satırları
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')